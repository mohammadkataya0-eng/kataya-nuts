<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Fill Your Bag - Kataya Nuts</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-[#b51916] text-white font-sans min-h-screen flex flex-col">

  <!-- Floating Header: Logo + Nav -->
  <header class="fixed top-0 left-0 w-full z-50 bg-[#b51916] shadow-lg">
    <div class="flex justify-center py-3 border-b border-white/20">
      <img src="/images/logo.png" alt="Kataya Nuts Logo" class="w-20 sm:w-24" />
    </div>
    <nav id="categoryNav"
     class="flex gap-3 px-4 py-2 overflow-x-auto whitespace-nowrap text-sm sm:text-base text-[#b51916] bg-[#d89a63] scrollbar-thin scrollbar-thumb-white/30">
</nav>

  </header>

  <!-- Main Content -->
  <main class="flex-grow container mx-auto px-4 sm:px-6 pt-48 pb-20 text-center">
    <h1 class="text-2xl sm:text-4xl font-bold mb-2">ðŸ‘œ Fill Your Bag â€“ Ø¹Ø¨Ù‘Ø¦ Ø­Ù‚ÙŠØ¨ØªÙƒ</h1>
    <p class="text-white/90 text-base sm:text-lg mb-6 max-w-2xl mx-auto">
      Start by opening a bag and selecting your ingredients.
    </p>

    <!-- Product Grid -->
    <div id="productGrid" class="space-y-12 opacity-30 pointer-events-none transition"></div>

    <!-- Bag Saved Message -->
    <p id="bagSaved" class="text-green-300 mt-6 text-base sm:text-lg hidden">
      âœ… Bag saved! You can open another one or proceed to checkout.
    </p>
  </main>

  <!-- Floating Controls -->
  <div class="fixed bottom-4 left-4 z-50 space-y-2">
    <button id="openBagBtn"
            onclick="openBag()"
            class="w-40 sm:w-auto bg-white text-[#b51916] font-semibold px-6 py-3 rounded-full shadow hover:bg-[#d89a63] hover:text-white transition">
      ðŸ’¼ Open New Bag
    </button>
    <button id="closeBagBtn"
            onclick="closeBag()"
            style="display: none;"
            class="w-40 sm:w-auto bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-full font-semibold shadow transition">
      âœ… Close Bag
    </button>
  </div>

  <!-- Checkout Button -->
  <a href="/checkout"
     class="fixed bottom-4 right-4 bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-full shadow-lg font-semibold z-50 w-40 sm:w-auto text-center">
    ðŸ›’ Checkout
  </a>

  <script>
    let currentBag = {};
    let bagOpen = false;
    const bagCart = JSON.parse(localStorage.getItem("bagCart") || "[]");

    async function fetchProducts() {
      const [itemsRes, categoriesRes] = await Promise.all([
        fetch('/api/items'),
        fetch('/api/categories')
      ]);

      const items = await itemsRes.json();
      const categories = await categoriesRes.json();

      const grid = document.getElementById('productGrid');
      const nav = document.getElementById('categoryNav');
      grid.innerHTML = '';
      nav.innerHTML = '';

      categories.filter(cat => !cat.archived).forEach(cat => {
        const section = document.createElement('section');
        section.id = `cat-${cat._id}`;

        const header = document.createElement('h2');
        header.className = 'text-white text-2xl font-bold mb-4';
        header.textContent = cat.name;
        section.appendChild(header);

        const catItems = items.filter(i => i.category?._id === cat._id && !i.archived);
        const row = document.createElement('div');
        row.className = 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6';

        catItems.forEach(p => {
          currentBag[p._id] = 0;

          const card = document.createElement('div');
          card.className = 'bg-white text-gray-800 rounded-xl p-4 shadow-md';

          const img = document.createElement('img');
          img.src = p.image || 'https://via.placeholder.com/300x200?text=No+Image';
          img.loading = 'lazy';
          img.className = 'w-full h-40 sm:h-48 object-cover rounded-lg mb-3';

          const title = document.createElement('div');
          title.className = 'font-bold text-base sm:text-lg mb-1';
          title.textContent = p.name;

          const price = document.createElement('div');
          price.className = 'text-red-700 font-semibold mb-3 text-sm sm:text-base';
          price.textContent = `$${p.pricePerKg} / kg`;

          const qty = document.createElement('div');
          qty.className = 'flex flex-col sm:flex-row items-center justify-center gap-2 text-sm';
          qty.innerHTML = `
            <div class="flex flex-col gap-1">
              <button onclick="updateQty('${p._id}', -1)" class="bg-[#b51916] text-white px-2 py-1 rounded-full text-xs sm:text-sm">-1kg</button>
              <button onclick="updateQty('${p._id}', -0.5)" class="bg-[#b51916] text-white px-2 py-1 rounded-full text-xs sm:text-sm">-500g</button>
              <button onclick="updateQty('${p._id}', -0.05)" class="bg-[#b51916] text-white px-2 py-1 rounded-full text-xs sm:text-sm">-50g</button>
            </div>
            <div class="px-4 py-1 font-bold text-gray-800 text-sm sm:text-base">
              <span id="qty-${p._id}">0.00</span> <span class="text-gray-500">kg</span>
            </div>
            <div class="flex flex-col gap-1">
              <button onclick="updateQty('${p._id}', 1)" class="bg-[#d89a63] text-white px-2 py-1 rounded-full text-xs sm:text-sm">+1kg</button>
              <button onclick="updateQty('${p._id}', 0.5)" class="bg-[#d89a63] text-white px-2 py-1 rounded-full text-xs sm:text-sm">+500g</button>
              <button onclick="updateQty('${p._id}', 0.05)" class="bg-[#d89a63] text-white px-2 py-1 rounded-full text-xs sm:text-sm">+50g</button>
            </div>
          `;

          card.appendChild(img);
          card.appendChild(title);
          card.appendChild(price);
          card.appendChild(qty);
          row.appendChild(card);
        });

        section.appendChild(row);
        grid.appendChild(section);

        const link = document.createElement('a');
        link.href = `#cat-${cat._id}`;
        link.className = 'inline-block px-3 py-1 hover:text-white transition';

        link.textContent = cat.name;
        nav.appendChild(link);
      });
    }

    function updateQty(itemId, delta) {
      if (!bagOpen) return;
      const newVal = Math.max(0, parseFloat(currentBag[itemId] || 0) + delta);
      currentBag[itemId] = parseFloat(newVal.toFixed(2));
      document.getElementById(`qty-${itemId}`).textContent = currentBag[itemId].toFixed(2);
    }

    function openBag() {
      Object.keys(currentBag).forEach(id => {
        currentBag[id] = 0;
        const el = document.getElementById(`qty-${id}`);
        if (el) el.textContent = '0.00';
      });
      document.getElementById('productGrid').classList.remove("opacity-30", "pointer-events-none");
      document.getElementById('bagSaved').classList.add("hidden");
      document.getElementById('openBagBtn').style.display = 'none';
      document.getElementById('closeBagBtn').style.display = 'inline-block';
      bagOpen = true;
    }

    function closeBag() {
      const filtered = {};
      Object.entries(currentBag).forEach(([id, val]) => {
        if (parseFloat(val) > 0) filtered[id] = parseFloat(val);
      });
      if (Object.keys(filtered).length === 0) return alert("Your bag is empty!");
      bagCart.push(filtered);
      localStorage.setItem("bagCart", JSON.stringify(bagCart));
      bagOpen = false;
      document.getElementById('productGrid').classList.add("opacity-30", "pointer-events-none");
      document.getElementById('bagSaved').classList.remove("hidden");
      document.getElementById('openBagBtn').style.display = 'inline-block';
      document.getElementById('closeBagBtn').style.display = 'none';
    }

    fetchProducts();
  </script>

</body>
</html>
